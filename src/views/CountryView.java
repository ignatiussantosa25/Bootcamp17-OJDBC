/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.CountryController;
import controllers.RegionController;
import entities.Region;
import java.sql.Connection;
import java.util.List;

/**
 *
 * @author budiarti
 */
public class CountryView extends javax.swing.JInternalFrame {

    private final ViewProccess viewProccess;
    private final CountryController countryController;
    private final String[] header = {"Country ID", "Country Name", "Region Name"};
    private final String[] category = {"country_id", "country_name", "region_name"};
    private final Connection connection;
    private final List<Object[]> RegionsTemp;

    /**
     * Creates new form CountryView1
     */
    public CountryView(Connection connection) {
        this.connection = connection;
        initComponents();
        this.viewProccess = new ViewProccess();
        this.countryController = new CountryController(connection);
        this.RegionsTemp = this.getDataRegions();
        this.loadCombobox();
        this.loadRegion();
        this.reset();
        this.bindingTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCountry = new javax.swing.JTable();
        data = new javax.swing.JTextField();
        btnFind = new javax.swing.JButton();
        cmbCategori = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        cmbRegion = new javax.swing.JComboBox();
        btnSave = new javax.swing.JButton();
        btnDrop = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Country");

        tblCountry.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblCountry.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCountryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCountry);

        data.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dataKeyPressed(evt);
            }
        });

        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        cmbCategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCategoriActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Country Detail"));

        jLabel1.setText("Country Id");

        jLabel2.setText("Country Name");

        jLabel3.setText("Region Name");

        cmbRegion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbRegionActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDrop.setText("Drop");
        btnDrop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDropActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtId)
                    .addComponent(txtName)
                    .addComponent(cmbRegion, 0, 181, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(159, Short.MAX_VALUE)
                .addComponent(btnDrop)
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbRegion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnDrop)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmbCategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnFind))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 44, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFind)
                    .addComponent(cmbCategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        this.search(this.viewProccess.getCategory(this.category, cmbCategori), data.getText());
    }//GEN-LAST:event_btnFindActionPerformed

    private void dataKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dataKeyPressed
        if (this.viewProccess.keyPressed(evt)) {
            this.search(this.viewProccess.getCategory(this.category, cmbCategori), data.getText());
    }//GEN-LAST:event_dataKeyPressed
    }
    private void tblCountryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCountryMouseClicked
        this.mouseClick(tblCountry.getSelectedRow());
    }//GEN-LAST:event_tblCountryMouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        this.saveOrEdit(txtId.getText(), txtName.getText(), cmbRegion.getSelectedIndex(), txtId.isEnabled());
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDropActionPerformed
        this.drop(txtId.getText());
    }//GEN-LAST:event_btnDropActionPerformed

    private void cmbCategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCategoriActionPerformed
        this.search(this.viewProccess.getCategory(this.category, cmbCategori), data.getText());
    }//GEN-LAST:event_cmbCategoriActionPerformed

    private void cmbRegionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbRegionActionPerformed
        
    }//GEN-LAST:event_cmbRegionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDrop;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cmbCategori;
    private javax.swing.JComboBox cmbRegion;
    private javax.swing.JTextField data;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCountry;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    /**
     * fungsi untuk menampilkan isi tabel
     */
    public void bindingTable() {
        this.viewProccess.viewTable(tblCountry, header,
                this.countryController.bindingSort(category[0], "asc"));
    }

    /**
     * fungsi untuk pencarian berdasarkan kondisi
     *
     * @param category
     * @param data
     */
    public void search(String category, String data) {
        this.viewProccess.viewTable(tblCountry, header, this.countryController.find(category, data));
    }

    /**
     * untuk menampilkan nilai dari categori ke comboboxsearch
     */
    public void loadCombobox() {
        this.viewProccess.loadSearchComboBox(cmbCategori, header);
    }

    /**
     * untukmenampilkan nama region pada region name
     */
    public void loadRegion() {
        this.viewProccess.loadDetails(cmbRegion, new RegionController(connection).binding(), 1);
    }

    /**
     * fungsi hapus data
     *
     * @param countryId
     */
    public void drop(String countryId) {
        if (this.viewProccess.dropConfirm(this)) {
            this.viewProccess.dropData(this, this.countryController.drop(countryId));
        }
        this.reset();
    }

    /**
     * fungsi save/update berdasarkan parameter tertentu
     *
     * @param countryId
     * @param countryName
     * @param region
     * @param isSave
     */
    public void saveOrEdit(String countryId, String countryName, int region, boolean isSave) {
        boolean flag = false;
        if (isSave) {
            flag = this.countryController.save(txtId.getText(), txtName.getText(), this.getRegionId());
        } else {
            flag = this.countryController.edit(txtId.getText(), txtName.getText(), this.getRegionId());
        }
        this.viewProccess.saveData(this, flag, isSave);
        this.reset();
    }

    /**
     * fungsi menampilkan data yg yg telah diinputkan ke tbl country pada jframe
     *
     * @param row
     */
    public void mouseClick(int row) {
        txtId.setEnabled(false);
        btnDrop.setEnabled(true);
        txtId.setText(tblCountry.getValueAt(row, 0).toString());
        txtName.setText(tblCountry.getValueAt(row, 1).toString());
        cmbRegion.setSelectedItem(tblCountry.getValueAt(row, 2).toString());
    }

    /**
     * funsi reset komponen
     */
    public void reset() {
        txtId.setEnabled(true);
        txtName.setText("");
        cmbRegion.setSelectedItem("");
        data.setText("");
        this.bindingTable();
        btnDrop.setEnabled(false);
    }

    /**
     * 
     * @return menyimpan regionid kedalam list object
     */
    public List<Object[]> getDataRegions() {
        return new RegionController(connection).bindingSort("region_id", "asc");
    }

    /**
     * 
     * @return mengambil nilai regionid dari index combobox yg dipilih
     */
    private String getRegionId() {
        return this.viewProccess.getIdfromComboBox(this.RegionsTemp, cmbRegion.getSelectedIndex());
    }
}
